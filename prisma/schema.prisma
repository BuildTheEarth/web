// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String           @id @default(uuid())
  ssoId             String           @unique
  discordId         String?
  createdBuildTeams BuildTeam[]      @relation("creator")
  joinedBuildTeams  BuildTeam[]      @relation("members")
  UserPermission    UserPermission[]
}

model BuildTeam {
  id                   String                @id @default(uuid())
  name                 String                @unique
  icon                 String
  backgroundImage      String
  socials              Social[]              @relation("socials")
  invite               String
  about                String
  builds               Build[]               @relation("builds")
  showcases            Showcase[]            @relation("showcases")
  creator              User                  @relation("creator", references: [id], fields: [creatorId])
  creatorId            String
  createdAt            DateTime              @default(now())
  members              User[]                @relation("members")
  UserPermission       UserPermission[]
  applicationQuestions ApplicationQuestion[] @relation("applicationQuestions")
  location             String                @default("")
  slug                 String                @unique @default("")
}

model ApplicationQuestion {
  id             String                  @id @default(uuid())
  title          String
  subtitle       String
  placeholder    String                  @default("")
  required       Boolean                 @default(true)
  type           ApplicationQuestionType
  icon           String
  additionalData Json                    @default("{}")
  buildTeam      BuildTeam               @relation("applicationQuestions", fields: [buildTeamId], references: [id])
  buildTeamId    String
  sort           Int                     @unique
}

enum ApplicationQuestionType {
  TEXT
  SHORT_INPUT
  LONG_INPUT
  DROPDOWN
  CITY
  URL
  MINECRAFT
  SLIDER
  IMAGE
  CHECKBOX
}

model Social {
  id          String    @id @default(uuid())
  name        String
  icon        String
  url         String    @unique
  buildTeam   BuildTeam @relation("socials", fields: [buildTeamId], references: [id])
  buildTeamId String
}

model Build {
  id          String    @id @default(uuid())
  name        String
  buildTeam   BuildTeam @relation("builds", fields: [buildTeamId], references: [id])
  createdAt   DateTime  @default(now())
  buildTeamId String
}

model Showcase {
  id          String    @id @default(uuid())
  image       String
  title       String
  buildTeam   BuildTeam @relation("showcases", fields: [buildTeamId], references: [id])
  createdAt   DateTime  @default(now())
  buildTeamId String
}

model UserPermission {
  id          String     @id @default(uuid())
  user        User       @relation(fields: [userId], references: [id])
  userId      String
  buildTeam   BuildTeam? @relation(fields: [buildTeamId], references: [id])
  buildTeamId String?
  permission  String
}

model FAQQuestion {
  id String @id @default(uuid())
  question String
  answer String
  links Json[] @default([])
}

model Contact {
  id String @id @default(uuid())
  name String
  role String
  discord String?
  email String? 
  avatar String?
}